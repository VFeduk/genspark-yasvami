import logging
import os
from handlers.registration import start_registration, check_user_exists
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from keyboards.menu_kb import (
    get_main_menu_keyboard, get_start_keyboard, get_event_rules_keyboard, 
    get_rules_detail_keyboard, get_back_button
)
from utils.states import MainState

router = Router()
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–µ–Ω—é
class MenuStates(StatesGroup):
    waiting_for_rules_confirmation = State()
    showing_rules = State()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        welcome_image_path = os.path.join("static", "welcome.jpg")
        
        if os.path.exists(welcome_image_path):
            welcome_image = FSInputFile(welcome_image_path)
            await message.answer_photo(
                photo=welcome_image,
                caption="–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π! "
                        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π, –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è –ª—é–±–æ–≥–æ –≤–∏–¥–∞ –¥–æ—Å—É–≥–∞ "
                        "–∏–ª–∏ –Ω–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –Ω–∞ —Å–≤–æ–µ–º –ø—É—Ç–∏!) –í –æ–±—â–µ–º –Ω–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É \"–°–¢–ê–†–¢\" –∏ –ø–æ–µ—Ö–∞–ª–∏!",
                reply_markup=get_start_keyboard()
            )
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
            logger.warning(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {welcome_image_path}")
            await message.answer(
                "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π! "
                "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π, –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è –ª—é–±–æ–≥–æ –≤–∏–¥–∞ –¥–æ—Å—É–≥–∞ "
                "–∏–ª–∏ –Ω–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –Ω–∞ —Å–≤–æ–µ–º –ø—É—Ç–∏!) –í –æ–±—â–µ–º –Ω–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É \"–°–¢–ê–†–¢\" –∏ –ø–æ–µ—Ö–∞–ª–∏!",
                reply_markup=get_start_keyboard()
            )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–°–¢–ê–†–¢"
        await state.set_state(MainState.waiting_for_start)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_start: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_menu_keyboard()
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üåü <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç \"–Ø —Å –í–∞–º–∏\"!</b> üåü\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è –ª—é–±–æ–≥–æ –≤–∏–¥–∞ –¥–æ—Å—É–≥–∞ –∏–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ!\n\n"
        "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
        "‚Ä¢ üë• –ù–∞–π—Ç–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º\n"
        "‚Ä¢ üéâ –°–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ\n"
        "‚Ä¢ üîç –ù–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ\n"
        "‚Ä¢ ‚≠ê –°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞\n\n"
        "<b>–ö–∞–∫ –Ω–∞—á–∞—Ç—å:</b>\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å\" –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n"
        "2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ\n"
        "3. –°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏–ª–∏ –Ω–∞–π–¥–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ\n"
        "4. –ó–Ω–∞–∫–æ–º—å—Ç–µ—Å—å –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!\n\n"
        "<b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b> –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ \"–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π\" –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
    )
    
    await message.answer(help_text, parse_mode="HTML", reply_markup=get_main_menu_keyboard())

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –°–¢–ê–†–¢
@router.callback_query(F.data == "start_bot")
async def process_start_button(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –°–¢–ê–†–¢"""
    await callback.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∫–æ–ª–±—ç–∫
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        current_state = await state.get_state()
        logger.info(f"–ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –°–¢–ê–†–¢ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}, —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
        welcome_text = (
            "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:\n\n"
            "üë§ <b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b> - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–º\n"
            "‚ûï <b>–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ</b> - –æ—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ —Å–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ\n"
            "üëÄ <b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</b> - –Ω–∞–π–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è\n"
            "üìö <b>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</b> - –ø—Ä–∞–≤–∏–ª–∞ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n\n"
            "üí° <i>–ï—Å–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ –∑–¥–µ—Å—å, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∞—Ç—å —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏ –∏–∑—É—á–µ–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π!</i>"
        )
        
        await callback.message.answer(
            welcome_text,
            parse_mode="HTML",
            reply_markup=get_main_menu_keyboard()
        )
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ process_start_button: {e}")
        await callback.message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞.",
            reply_markup=get_main_menu_keyboard()
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏–∑ –º–µ–Ω—é –±–æ—Ç–∞ (–∫–æ–º–∞–Ω–¥—ã /profile, /create –∏ —Ç.–¥.)
@router.message(Command("profile"))
async def cmd_profile(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile"""
    await show_profile(message)

@router.message(Command("create"))
async def cmd_create(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /create"""
    await create_event(message, state)

@router.message(Command("events"))
async def cmd_events(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /events"""
    await view_events(message)

@router.message(Command("knowledge"))
async def cmd_knowledge(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /knowledge"""
    await knowledge_base(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å ReplyKeyboard
@router.message(F.text == "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def show_profile(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞–∂–∞–ª '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not await check_user_exists(message.from_user.id):
        await start_registration(message, state)
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
        await message.answer(
            "üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
            "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\n"
            "–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.",
 @router.message(F.text == "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def show_profile(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞–∂–∞–ª '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not await check_user_exists(message.from_user.id):
        await start_registration(message, state)
    else:
        await message.answer(
            "üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n"
            "–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.",
            parse_mode="HTML"
        )

    rules_text = (
        "üìã <b>–°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</b>\n\n"
        "–ü–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤—ã –¥–æ–ª–∂–Ω—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ "
        "–ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ –æ–±—â–µ–Ω–∏—è –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ.\n\n"
        "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç—å "
        "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤."
    )
    
    await message.answer(
        rules_text,
        parse_mode="HTML",
        reply_markup=get_event_rules_keyboard()
    )
    await state.set_state(MenuStates.waiting_for_rules_confirmation)

@router.message(F.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
async def view_events(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞–∂–∞–ª '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'")
    
    events_text = (
        "üëÄ <b>–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</b>\n\n"
        "–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ:\n"
        "‚Ä¢ –ü—Ä–æ–≥—É–ª–∫–∏ –∏ –≤—Å—Ç—Ä–µ—á–∏\n"
        "‚Ä¢ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
        "‚Ä¢ –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n"
        "‚Ä¢ –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –ø–æ–µ–∑–¥–∫–∏\n\n"
        "üîß <i>–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>"
    )
    
    await message.answer(events_text, parse_mode="HTML")

@router.message(F.text == "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π")
async def knowledge_base(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π'"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞–∂–∞–ª '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π'")
    
    knowledge_text = (
        "üìö <b>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</b>\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –±–æ—Ç–∞ \"–Ø —Å –í–∞–º–∏\"!\n\n"
        "–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n"
        "‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n"
        "‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ —É—á–∞—Å—Ç–∏—è –≤ —Å–æ–±—ã—Ç–∏—è—Ö\n"
        "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ —Ä–µ–π—Ç–∏–Ω–≥–∞\n"
        "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ VIP-—Å—Ç–∞—Ç—É—Å–∞\n"
        "‚Ä¢ –û–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ\n\n"
        "üìñ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:"
    )
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–¥–µ–ª–æ–≤ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    await message.answer(knowledge_text, parse_mode="HTML")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª (–æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
@router.callback_query(F.data == "show_rules")
async def show_rules_menu(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text(
        "üìã –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è:",
        reply_markup=get_rules_detail_keyboard()
    )
    await state.set_state(MenuStates.showing_rules)

@router.callback_query(F.data == "event_creation_rules")
async def show_creation_rules(callback: CallbackQuery):
    await callback.answer()
    rules_text = """üìã <b>–ü—Ä–∞–≤–∏–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π</b>

<b>1. –û–±—â–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è</b>
‚Ä¢ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –æ–±—â–µ–Ω–∏–µ, —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π –¥–æ—Å—É–≥ –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
‚Ä¢ –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è —Å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –≤—ã–≥–æ–¥–æ–π –∏–ª–∏ –Ω–∞—Ä—É—à–∞—é—â–∏–µ –∑–∞–∫–æ–Ω—ã –†–§
‚Ä¢ –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–æ–ª–∂–Ω—ã —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ

<b>2. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é</b>
‚ùå <b>–ù–µ–ª—å–∑—è:</b>
‚Ä¢ –£–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –ª–µ–∫—Å–∏–∫—É –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
‚Ä¢ –£–∫–∞–∑—ã–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—á–∞—Å—Ç–∏—è
‚Ä¢ –†–∞–∑–º–µ—â–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç 18+ –∏–ª–∏ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞

‚úÖ <b>–ú–æ–∂–Ω–æ:</b>
‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ, —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏
‚Ä¢ –£–∫–∞–∑—ã–≤–∞—Ç—å –º–µ—Å—Ç–æ, –≤—Ä–µ–º—è, –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
‚Ä¢ –ü—Ä–æ—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–∑—è—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–µ—â–∏

<b>3. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞</b>
‚Ä¢ –í—ã –æ–±—è–∑—É–µ—Ç–µ—Å—å –±—ã—Ç—å –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
‚Ä¢ –ü—Ä–∏ –æ—Ç–º–µ–Ω–µ —É–≤–µ–¥–æ–º–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–∏–Ω–∏–º—É–º –∑–∞ 6 —á–∞—Å–æ–≤
‚Ä¢ –ù–µ—Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –≤–µ–¥–µ—Ç –∫ —Å–Ω–∏–∂–µ–Ω–∏—é —Ä–µ–π—Ç–∏–Ω–≥–∞"""
    
    await callback.message.edit_text(
        rules_text,
        parse_mode="HTML",
        reply_markup=get_back_button()
    )

@router.callback_query(F.data == "event_registration_rules")
async def show_registration_rules(callback: CallbackQuery):
    await callback.answer()
    rules_text = """üìã <b>–ü—Ä–∞–≤–∏–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ</b>

<b>1. –£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è</b>
‚Ä¢ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –∏ –ø–æ–ª—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
‚Ä¢ –ù–µ–ª—å–∑—è –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è "–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π" - –µ—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω—ã, –ª—É—á—à–µ –Ω–µ –∑–∞–Ω–∏–º–∞–π—Ç–µ –º–µ—Å—Ç–æ

<b>2. –ü–æ–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏</b>
‚ùå <b>–ó–∞–ø—Ä–µ—â–µ–Ω–æ:</b>
‚Ä¢ –û—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
‚Ä¢ –ü—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ –Ω–µ—Ç—Ä–µ–∑–≤–æ–º –≤–∏–¥–µ
‚Ä¢ –ü–æ–∫–∏–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è

‚úÖ <b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:</b>
‚Ä¢ –ë—ã—Ç—å –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω—ã–º –∏ —É–≤–∞–∂–∞—Ç—å –≤—Ä–µ–º—è –¥—Ä—É–≥–∏—Ö
‚Ä¢ –°–æ–±–ª—é–¥–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
‚Ä¢ –û—Å—Ç–∞–≤–∏—Ç—å —á–µ—Å—Ç–Ω—ã–π –æ—Ç–∑—ã–≤ –ø–æ—Å–ª–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è

<b>3. –û—Ç–º–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è</b>
‚Ä¢ –û—Ç–º–µ–Ω—è–π—Ç–µ –∑–∞–ø–∏—Å—å –∑–∞ 12 —á–∞—Å–æ–≤ –¥–æ –Ω–∞—á–∞–ª–∞
‚Ä¢ –ß–∞—Å—Ç—ã–µ –æ—Ç–∫–∞–∑—ã –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç —Å–Ω–∏–∂–∞—é—Ç —Ä–µ–π—Ç–∏–Ω–≥

<b>–ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π:</b>
‚Ä¢ –ü–µ—Ä–≤–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ ‚Üí –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
‚Ä¢ –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ ‚Üí —Å–Ω–∏–∂–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ (-10 –±–∞–ª–ª–æ–≤)
‚Ä¢ –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è ‚Üí –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞"""
    
    await callback.message.edit_text(
        rules_text,
        parse_mode="HTML",
        reply_markup=get_back_button()
    )

@router.callback_query(F.data == "back_to_rules")
async def back_to_rules_menu(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text(
        "üìã –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è:",
        reply_markup=get_rules_detail_keyboard()
    )

@router.callback_query(F.data == "accept_rules")
async def accept_rule(callback: CallbackQuery):
    await callback.answer("–í—ã –ø—Ä–∏–Ω—è–ª–∏ –ø—Ä–∞–≤–∏–ª–∞")
    await show_rules_menu(callback, None)

@router.callback_query(F.data == "accept_all_rules")
async def accept_all_rules(callback: CallbackQuery, state: FSMContext):
    await callback.answer("–í—ã –ø—Ä–∏–Ω—è–ª–∏ –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞")
    
    success_text = (
        "‚úÖ <b>–û—Ç–ª–∏—á–Ω–æ!</b>\n\n"
        "–í—ã —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å —Å–æ –≤—Å–µ–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.\n\n"
        "üîß <i>–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.</i>\n"
        "–ü–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –¥—Ä—É–≥–∏–µ —Ä–∞–∑–¥–µ–ª—ã –±–æ—Ç–∞."
    )
    
    await callback.message.answer(
        success_text,
        parse_mode="HTML",
        reply_markup=get_main_menu_keyboard()
    )
    await state.clear()

@router.callback_query(F.data == "back_to_main")
async def back_to_main(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    try:
        await callback.message.delete()
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
    
    await callback.message.answer(
        "üè† –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu_keyboard()
    )
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@router.message()
async def process_other_messages(message: Message):
    if message.text and message.text.startswith('/'):
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {message.text}")
        await message.answer(
            "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.",
            reply_markup=get_main_menu_keyboard()
        )
    else:
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {message.text}")
        await message.answer(
            "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.",
            reply_markup=get_main_menu_keyboard()
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback_query
@router.callback_query()
async def process_unknown_callback(callback: CallbackQuery):
    logger.warning(f"–ü–æ–ª—É—á–µ–Ω –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π callback_query –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}: {callback.data}")
    await callback.answer("üîß –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)
